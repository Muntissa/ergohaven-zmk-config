#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  behaviors {
    /* -------------------- MACROS -------------------- */
    qa: qa {
      compatible = "zmk,behavior-macro";
      label = "QA";
      #binding-cells = <0>;
      bindings = <&kp LC(DOT)>; /* Ctrl+. Quick Actions */
    };

    fmt_doc: fmt_doc {
      compatible = "zmk,behavior-macro";
      label = "FMT_DOC";
      #binding-cells = <0>;
      /* Ctrl+K, Ctrl+D */
      bindings = <&kp LC(K)>, <&kp LC(D)>;
    };

    build_sol: build_sol {
      compatible = "zmk,behavior-macro";
      label = "BUILD";
      #binding-cells = <0>;
      bindings = <&kp LC(LS(B))>; /* Ctrl+Shift+B */
    };

    start_dbg: start_dbg {
      compatible = "zmk,behavior-macro";
      label = "DBG_START";
      #binding-cells = <0>;
      bindings = <&kp F5>;
    };

    start_wo_dbg: start_wo_dbg {
      compatible = "zmk,behavior-macro";
      label = "RUN_NO_DBG";
      #binding-cells = <0>;
      bindings = <&kp LC(F5)>; /* Ctrl+F5 */
    };

    stop_dbg: stop_dbg {
      compatible = "zmk,behavior-macro";
      label = "DBG_STOP";
      #binding-cells = <0>;
      bindings = <&kp LS(F5)>; /* Shift+F5 */
    };

    step_over: step_over {
      compatible = "zmk,behavior-macro";
      label = "STEP_OVER";
      #binding-cells = <0>;
      bindings = <&kp F10>;
    };

    step_into: step_into {
      compatible = "zmk,behavior-macro";
      label = "STEP_INTO";
      #binding-cells = <0>;
      bindings = <&kp F11>;
    };

    step_out: step_out {
      compatible = "zmk,behavior-macro";
      label = "STEP_OUT";
      #binding-cells = <0>;
      bindings = <&kp LS(F11)>; /* Shift+F11 */
    };

    comment_sel: comment_sel {
      compatible = "zmk,behavior-macro";
      label = "COMMENT";
      #binding-cells = <0>;
      /* Ctrl+K, Ctrl+C */
      bindings = <&kp LC(K)>, <&kp LC(C)>;
    };

    uncomment_sel: uncomment_sel {
      compatible = "zmk,behavior-macro";
      label = "UNCOMMENT";
      #binding-cells = <0>;
      /* Ctrl+K, Ctrl+U */
      bindings = <&kp LC(K)>, <&kp LC(U)>;
    };

    run_tests_all: run_tests_all {
      compatible = "zmk,behavior-macro";
      label = "TEST_ALL";
      #binding-cells = <0>;
      /* Ctrl+R, A  — удерживаем Ctrl сами */
      bindings = <&macro_press &kp LCTRL
                 &macro_tap &kp R
                 &macro_wait_time 10
                 &macro_tap &kp A
                 &macro_release &kp LCTRL>;
    };

    run_tests_ctx: run_tests_ctx {
      compatible = "zmk,behavior-macro";
      label = "TEST_CTX";
      #binding-cells = <0>;
      /* Ctrl+R, T */
      bindings = <&macro_press &kp LCTRL
                 &macro_tap &kp R
                 &macro_wait_time 10
                 &macro_tap &kp T
                 &macro_release &kp LCTRL>;
    };

    pair_paren: pair_paren {
      compatible = "zmk,behavior-macro";
      label = "PAIR()";
      #binding-cells = <0>;
      bindings = <&kp LPAR>, <&kp RPAR>, <&kp LEFT>;
    };
    pair_brace: pair_brace {
      compatible = "zmk,behavior-macro";
      label = "PAIR{}";
      #binding-cells = <0>;
      bindings = <&kp LBRC>, <&kp RBRC>, <&kp LEFT>;
    };
    pair_brkt: pair_brkt {
      compatible = "zmk,behavior-macro";
      label = "PAIR[]";
      #binding-cells = <0>;
      bindings = <&kp LBKT>, <&kp RBKT>, <&kp LEFT>;
    };
    pair_quotes: pair_quotes {
      compatible = "zmk,behavior-macro";
      label = "PAIR\"\"";
      #binding-cells = <0>;
      bindings = <&kp DQT>, <&kp LEFT>;
    };

    cw_snippet: cw_snippet {
      compatible = "zmk,behavior-macro";
      label = "CW";
      #binding-cells = <0>;
      /* "cw" + Tab -> Console.WriteLine(); (VS snippet) */
      bindings = <&kp C>, <&kp W>, <&kp TAB>;
    };

    /* ----------------- ENCODERS ROTATION ----------------- */
    enc_tabs: enc_tabs {
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&kp LC(LS(TAB))>, <&kp LC(TAB)>; /* prev/next tab */
    };

    enc_navhist: enc_navhist {
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&kp LA(LEFT)>, <&kp LA(RIGHT)>; /* Navigate Back/Forward (VS/OS) */
    };

    /* На VS Tools слое — энкодером бегать по ошибкам (Shift+F8 / F8) */
    enc_errors: enc_errors {
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&kp LS(F8)>, <&kp F8>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    /* -------------------- Base -------------------- */
    base {
      bindings = <
        &kp ESC   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                         &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &kp BSPC
        &kp GRAVE &kp Q   &kp W   &kp E   &kp R   &kp T                          &kp Y   &kp U   &kp I   &kp O   &kp P    &kp BSLH
        &kp TAB   &kp A   &kp S   &kp D   &kp F   &kp G                          &kp H   &kp J   &kp K   &kp L   &kp SEMI  &kp SQT
        &kp LSHFT &kp Z   &kp X   &kp C   &kp V   &kp B     &qa        &build_sol &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp SPACE  &kp ENTER  &mo 2   &mt RCTRL LBKT  &mt RALT RBKT  &kp RGUI
      >;

      display-name = "Base";
      /* Энкодеры: вкладки и навигация истории */
      sensor-bindings =
        <&enc_tabs>, <&enc_navhist>,
        <&enc_tabs>, <&enc_navhist>,
        <&enc_tabs>, <&enc_navhist>;
    };

    /* -------------------- Navigation -------------------- */
    nav {
      bindings = <
        &kp F1  &kp F2  &kp F3        &kp F4    &kp F5         &kp F6                     &kp F7           &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
        &trans  &kp HOME  &kp PG_UP   &kp PG_DN  &kp END       &trans                     &kp PG_UP        &trans  &trans  &trans   &trans   &trans
        &trans  &kp LEFT  &kp UP      &kp DOWN   &kp RIGHT     &trans                     &kp PG_DN        &trans  &trans  &trans   &trans   &trans
        &trans  &kp LC(LEFT)  &trans  &trans     &kp LC(RIGHT)  &kp DEL   &trans  &trans  &kp PRINTSCREEN  &trans  &trans  &trans   &trans   &trans
                   &trans        &trans    &trans         &trans   &trans    &trans  &vs_tools         &trans  &trans  &trans
      >;

      display-name = "Navigation";
      sensor-bindings =
        <&enc_tabs>, <&enc_navhist>,
        <&enc_tabs>, <&enc_navhist>,
        <&enc_tabs>, <&enc_navhist>;
    };

    /* -------------------- Symbols -------------------- */
    sym {
      bindings = <
        &trans  &trans    &kp AT    &kp DLLR   &kp HASH  &trans                       &trans     &trans    &kp CARET  &trans    &trans    &trans
        &trans  &trans    &pair_paren  &kp EQUAL  &pair_brkt  &kp GRAVE                &trans     &kp LBKT  &kp UNDER  &kp RBKT  &trans    &trans
        &trans  &kp BSLH  &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                     &kp PRCNT  &pair_brace  &kp SEMI   &kp RBRC  &kp EXCL  &trans
        &trans  &trans    &kp STAR  &kp COLON  &kp FSLH  &trans     &trans    &trans  &trans     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                     &trans    &trans     &trans    &vs_tools  &trans    &trans  &trans     &trans    &trans     &trans
      >;

      display-name = "Symbols";
      sensor-bindings =
        <&enc_tabs>, <&enc_navhist>,
        <&enc_tabs>, <&enc_navhist>,
        <&enc_tabs>, <&enc_navhist>;
    };

    /* -------------------- VS Tools (замена Adjust) -------------------- */
    vs_tools {
      bindings = <
        &bootloader  &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &trans        &trans
        &start_dbg   &stop_dbg  &start_wo_dbg  &build_sol  &fmt_doc  &qa       &run_tests_ctx  &run_tests_all  &step_over  &step_into  &step_out  &trans
        &comment_sel &uncomment_sel  &kp F2  &kp F12  &kp LA(F12)  &kp LC(LS(F))  &trans  &trans  &trans  &trans  &trans  &trans
        &trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans         &trans         &trans        &trans        &trans
                          &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
      >;

      display-name = "VS Tools";
      /* На этом слое левый энкодер — по ошибкам (Shift+F8/F8), правый — громкость */
      sensor-bindings =
        <&enc_errors>, <&enc_vol>,
        <&enc_errors>, <&enc_vol>,
        <&enc_errors>, <&enc_vol>;
    };
  };
};

/* Удобная метка для входа на слой VS Tools с навигации/символов */
#define vs_tools &mo 3
